import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Textarea } from '@/components/ui/textarea';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedFilters, setSelectedFilters] = useState<string[]>([]);
  const [selectedJob, setSelectedJob] = useState<any>(null);
  const [showProfile, setShowProfile] = useState(false);
  const [showChat, setShowChat] = useState(false);
  const [chatMessage, setChatMessage] = useState('');
  const [chatMessages, setChatMessages] = useState<any[]>([
    { id: 1, sender: 'hr', name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞', message: '–ü—Ä–∏–≤–µ—Ç! –Ø HR-–º–µ–Ω–µ–¥–∂–µ—Ä TechCorp. –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ —Å React?', time: '14:30' },
    { id: 2, sender: 'user', message: '–ü—Ä–∏–≤–µ—Ç! –†–∞–±–æ—Ç–∞—é —Å React —É–∂–µ 3 –≥–æ–¥–∞, —Å–æ–∑–¥–∞–≤–∞–ª SPA –∏ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', time: '14:32' }
  ]);

  const jobs = [
    {
      id: 1,
      title: 'Senior React Developer',
      company: 'TechCorp',
      location: '–ú–æ—Å–∫–≤–∞',
      salary: '200-300k ‚ÇΩ',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      skills: ['React', 'TypeScript', 'Node.js'],
      match: 92,
      logo: 'üöÄ',
      description: '–ú—ã –∏—â–µ–º –æ–ø—ã—Ç–Ω–æ–≥–æ React —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∏–Ω—Ç–µ—Ö-–ø—Ä–æ–µ–∫—Ç–∞–º–∏. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ –∏–∑ 500+ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤!',
      requirements: ['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å React 16.8+ –∏ —Ö—É–∫–∞–º–∏', '–ó–Ω–∞–Ω–∏–µ TypeScript –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ JavaScript', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Redux –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏', '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ REST API –∏ GraphQL'],
      responsibilities: ['–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', 'Code review –∏ –º–µ–Ω—Ç–æ—Ä–∏–Ω–≥', '–£—á–∞—Å—Ç–∏–µ –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö'],
      benefits: ['–î–ú–° –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ —Å–µ–º—å–∏', '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã', '–û–±—É—á–µ–Ω–∏–µ –∑–∞ —Å—á–µ—Ç –∫–æ–º–ø–∞–Ω–∏–∏', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ñ–∏—Å –≤ —Ü–µ–Ω—Ç—Ä–µ'],
      remote: true,
      experience: '3-5 –ª–µ—Ç'
    },
    {
      id: 2,
      title: 'DevOps Engineer',
      company: 'CloudTech',
      location: '–°–ü–± / –£–¥–∞–ª–µ–Ω–Ω–æ',
      salary: '250-350k ‚ÇΩ',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      skills: ['Docker', 'Kubernetes', 'AWS'],
      match: 87,
      logo: '‚òÅÔ∏è',
      description: 'CloudTech –∏—â–µ—Ç DevOps –∏–Ω–∂–µ–Ω–µ—Ä–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–ª–∞—á–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –†–∞–±–æ—Ç–∞–π —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –≤ –¥—Ä—É–∂–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ!',
      requirements: ['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–µ–π (Docker)', '–ó–Ω–∞–Ω–∏–µ Kubernetes –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å AWS –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º–∏ –æ–±–ª–∞—á–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏', '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ CI/CD'],
      responsibilities: ['–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–∞—á–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π', '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è', '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º', '–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'],
      benefits: ['–í—ã—Å–æ–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', '–ü–æ–ª–Ω–∞—è —É–¥–∞–ª–µ–Ω–∫–∞', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'],
      remote: true,
      experience: '4-6 –ª–µ—Ç'
    },
    {
      id: 3,
      title: 'Python Backend Developer',
      company: 'DataFlow',
      location: '–£–¥–∞–ª–µ–Ω–Ω–æ',
      salary: '180-250k ‚ÇΩ',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      skills: ['Python', 'Django', 'PostgreSQL'],
      match: 78,
      logo: 'üêç',
      description: 'DataFlow - –∫–æ–º–ø–∞–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ò—â–µ–º Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º.',
      requirements: ['–û–ø—ã—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ Python 3.8+', '–ó–Ω–∞–Ω–∏–µ Django –∏–ª–∏ FastAPI', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å PostgreSQL', '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ REST API'],
      responsibilities: ['–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ backend-—Å–µ—Ä–≤–∏—Å–æ–≤', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö', '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ API', '–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤'],
      benefits: ['–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å big data', '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫', '–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤', '–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç'],
      remote: false,
      experience: '2-4 –≥–æ–¥–∞'
    }
  ];

  const companies = [
    {
      name: 'TechCorp',
      logo: 'üöÄ',
      employees: '500+',
      openJobs: 12,
      description: '–õ–∏–¥–µ—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–Ω—Ç–µ—Ö–∞'
    },
    {
      name: 'CloudTech',
      logo: '‚òÅÔ∏è',
      employees: '200+',
      openJobs: 8,
      description: '–û–±–ª–∞—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞'
    },
    {
      name: 'DataFlow',
      logo: 'üêç',
      employees: '100+',
      openJobs: 15,
      description: '–ë–æ–ª—å—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ ML'
    }
  ];

  const filters = ['React', 'Python', 'DevOps', 'Remote', 'Senior', 'Junior'];

  const toggleFilter = (filter: string) => {
    setSelectedFilters(prev => 
      prev.includes(filter) 
        ? prev.filter(f => f !== filter)
        : [...prev, filter]
    );
  };

  const sendMessage = () => {
    if (chatMessage.trim()) {
      const newMessage = {
        id: chatMessages.length + 1,
        sender: 'user',
        message: chatMessage,
        time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })
      };
      setChatMessages([...chatMessages, newMessage]);
      setChatMessage('');
      
      // Simulate HR response after 2 seconds
      setTimeout(() => {
        const hrResponse = {
          id: chatMessages.length + 2,
          sender: 'hr',
          name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
          message: '–û—Ç–ª–∏—á–Ω–æ! –ú—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–∞—Å –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é. –ö–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ?',
          time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })
        };
        setChatMessages(prev => [...prev, hrResponse]);
      }, 2000);
    }
  };

  const profileStats = {
    profileViews: 1247,
    applicationsSent: 23,
    responsesReceived: 8,
    interviewsScheduled: 5,
    skillsProgress: {
      React: 85,
      TypeScript: 78,
      'Node.js': 72,
      Python: 45
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-vibrant-purple via-primary to-creative-orange">
      {/* Header */}
      <header className="backdrop-blur-md bg-white/10 border-b border-white/20">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <Icon name="Rocket" size={32} className="text-white animate-float" />
              <h1 className="text-2xl font-bold text-white">IT JobSpace</h1>
            </div>
            <nav className="hidden md:flex space-x-6">
              <a href="#" className="text-white/80 hover:text-white transition-colors">–í–∞–∫–∞–Ω—Å–∏–∏</a>
              <a href="#" className="text-white/80 hover:text-white transition-colors">–ö–æ–º–ø–∞–Ω–∏–∏</a>
              <button 
                onClick={() => setShowProfile(true)}
                className="text-white/80 hover:text-white transition-colors"
              >
                –ü—Ä–æ—Ñ–∏–ª—å
              </button>
              <a href="#" className="text-white/80 hover:text-white transition-colors">–ë–ª–æ–≥</a>
            </nav>
            <div className="flex items-center space-x-3">
              <Sheet open={showChat} onOpenChange={setShowChat}>
                <SheetTrigger asChild>
                  <Button variant="outline" className="bg-white/20 border-white/30 text-white hover:bg-white/30 relative">
                    <Icon name="MessageCircle" size={16} className="mr-1" />
                    –ß–∞—Ç
                    <div className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
                  </Button>
                </SheetTrigger>
                <SheetContent className="w-96">
                  <SheetHeader>
                    <SheetTitle className="flex items-center space-x-2">
                      <Icon name="MessageCircle" size={20} />
                      <span>HR –ß–∞—Ç</span>
                    </SheetTitle>
                  </SheetHeader>
                  <div className="flex flex-col h-full mt-6">
                    <div className="flex-1 overflow-y-auto space-y-4 mb-4">
                      {chatMessages.map((msg) => (
                        <div key={msg.id} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                          <div className={`max-w-[80%] ${msg.sender === 'user' ? 'order-2' : 'order-1'}`}>
                            {msg.sender === 'hr' && (
                              <div className="flex items-center space-x-2 mb-1">
                                <Avatar className="w-6 h-6">
                                  <AvatarImage src="/placeholder-hr.jpg" />
                                  <AvatarFallback>–ê–ü</AvatarFallback>
                                </Avatar>
                                <span className="text-xs text-gray-600">{msg.name}</span>
                              </div>
                            )}
                            <div className={`rounded-lg p-3 ${msg.sender === 'user' ? 'bg-primary text-white' : 'bg-gray-100 text-gray-900'}`}>
                              <p className="text-sm">{msg.message}</p>
                              <span className="text-xs opacity-70 mt-1 block">{msg.time}</span>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                    <div className="flex space-x-2">
                      <Textarea
                        value={chatMessage}
                        onChange={(e) => setChatMessage(e.target.value)}
                        placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                        className="flex-1 resize-none"
                        rows={2}
                        onKeyPress={(e) => {
                          if (e.key === 'Enter' && !e.shiftKey) {
                            e.preventDefault();
                            sendMessage();
                          }
                        }}
                      />
                      <Button onClick={sendMessage} className="px-3">
                        <Icon name="Send" size={16} />
                      </Button>
                    </div>
                  </div>
                </SheetContent>
              </Sheet>
              <Button variant="secondary" className="bg-white text-primary hover:bg-white/90">
                –í–æ–π—Ç–∏
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 text-center text-white">
        <div className="container mx-auto px-4">
          <h2 className="text-5xl font-bold mb-6 animate-pulse-glow">
            –ù–∞–π–¥–∏ —Ä–∞–±–æ—Ç—É –º–µ—á—Ç—ã –≤ IT üöÄ
          </h2>
          <p className="text-xl mb-10 opacity-90">
            –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ IT-–≤–∞–∫–∞–Ω—Å–∏–π —Å —É–º–Ω—ã–º –º–∞—Ç—á–∏–Ω–≥–æ–º
          </p>
          
          {/* Search Bar */}
          <div className="max-w-2xl mx-auto mb-8">
            <div className="relative">
              <Input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–≤—ã–∫–∞–º, –∫–æ–º–ø–∞–Ω–∏—è–º, –ø–æ–∑–∏—Ü–∏—è–º..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-12 pr-4 py-4 text-lg rounded-full bg-white/20 backdrop-blur-md border-white/30 text-white placeholder-white/70"
              />
              <Icon name="Search" size={20} className="absolute left-4 top-1/2 -translate-y-1/2 text-white/70" />
            </div>
          </div>

          {/* Filters */}
          <div className="flex flex-wrap justify-center gap-3 mb-12">
            {filters.map((filter) => (
              <Button
                key={filter}
                variant={selectedFilters.includes(filter) ? "default" : "outline"}
                onClick={() => toggleFilter(filter)}
                className={`rounded-full px-6 ${
                  selectedFilters.includes(filter)
                    ? 'bg-white text-primary'
                    : 'bg-white/20 text-white border-white/30 hover:bg-white/30'
                }`}
              >
                {filter}
              </Button>
            ))}
          </div>
        </div>
      </section>

      {/* Stats */}
      <section className="py-12 bg-white/10 backdrop-blur-md">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-3 gap-8 text-center text-white">
            <div>
              <div className="text-4xl font-bold mb-2">2,500+</div>
              <div className="opacity-80">–ê–∫—Ç–∏–≤–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π</div>
            </div>
            <div>
              <div className="text-4xl font-bold mb-2">500+</div>
              <div className="opacity-80">IT-–∫–æ–º–ø–∞–Ω–∏–π</div>
            </div>
            <div>
              <div className="text-4xl font-bold mb-2">95%</div>
              <div className="opacity-80">–¢–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç—á–∏–Ω–≥–∞</div>
            </div>
          </div>
        </div>
      </section>

      {/* Jobs Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between mb-12">
            <h3 className="text-3xl font-bold text-dark-charcoal">
              üî• –ì–æ—Ä—è—á–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
            </h3>
            <Button variant="outline" className="border-primary text-primary hover:bg-primary hover:text-white">
              –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
              <Icon name="ArrowRight" size={16} className="ml-2" />
            </Button>
          </div>

          <div className="grid gap-6">
            {jobs.map((job) => (
              <Card key={job.id} className="group hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border-l-4 border-l-primary">
                <CardContent className="p-6">
                  <div className="flex items-start justify-between">
                    <div className="flex items-start space-x-4 flex-1">
                      <div className="text-4xl">{job.logo}</div>
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="text-xl font-bold text-dark-charcoal group-hover:text-primary transition-colors">
                            {job.title}
                          </h4>
                          <Badge 
                            variant="secondary" 
                            className={`ml-2 ${
                              job.match >= 90 ? 'bg-green-100 text-green-800' :
                              job.match >= 80 ? 'bg-yellow-100 text-yellow-800' :
                              'bg-gray-100 text-gray-800'
                            }`}
                          >
                            {job.match}% match
                          </Badge>
                        </div>
                        <div className="text-lg font-semibold text-primary mb-2">{job.company}</div>
                        <div className="flex items-center space-x-4 text-gray-600 mb-3">
                          <div className="flex items-center space-x-1">
                            <Icon name="MapPin" size={16} />
                            <span>{job.location}</span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <Icon name="Banknote" size={16} />
                            <span>{job.salary}</span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <Icon name="Clock" size={16} />
                            <span>{job.type}</span>
                          </div>
                        </div>
                        <div className="flex flex-wrap gap-2">
                          {job.skills.map((skill, index) => (
                            <Badge key={index} variant="outline" className="text-xs">
                              {skill}
                            </Badge>
                          ))}
                        </div>
                      </div>
                    </div>
                    <div className="flex flex-col space-y-2 ml-4">
                      <Button size="sm" className="bg-primary hover:bg-primary/90">
                        <Icon name="Heart" size={16} className="mr-1" />
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </Button>
                      <Dialog>
                        <DialogTrigger asChild>
                          <Button size="sm" variant="outline" onClick={() => setSelectedJob(job)}>
                            –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                          </Button>
                        </DialogTrigger>
                        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
                          <DialogHeader>
                            <DialogTitle className="flex items-center space-x-3">
                              <span className="text-3xl">{job.logo}</span>
                              <div>
                                <h3 className="text-2xl font-bold">{job.title}</h3>
                                <p className="text-primary text-lg">{job.company}</p>
                              </div>
                            </DialogTitle>
                          </DialogHeader>
                          
                          <Tabs defaultValue="overview" className="mt-6">
                            <TabsList className="grid w-full grid-cols-4">
                              <TabsTrigger value="overview">–û–±–∑–æ—Ä</TabsTrigger>
                              <TabsTrigger value="requirements">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</TabsTrigger>
                              <TabsTrigger value="benefits">–£—Å–ª–æ–≤–∏—è</TabsTrigger>
                              <TabsTrigger value="company">–û –∫–æ–º–ø–∞–Ω–∏–∏</TabsTrigger>
                            </TabsList>
                            
                            <TabsContent value="overview" className="space-y-6">
                              <div className="grid grid-cols-2 gap-6">
                                <div className="space-y-4">
                                  <div className="flex items-center space-x-2">
                                    <Icon name="MapPin" size={20} className="text-gray-600" />
                                    <span>{job.location}</span>
                                  </div>
                                  <div className="flex items-center space-x-2">
                                    <Icon name="Banknote" size={20} className="text-gray-600" />
                                    <span>{job.salary}</span>
                                  </div>
                                  <div className="flex items-center space-x-2">
                                    <Icon name="Clock" size={20} className="text-gray-600" />
                                    <span>{job.type}</span>
                                  </div>
                                  <div className="flex items-center space-x-2">
                                    <Icon name="Briefcase" size={20} className="text-gray-600" />
                                    <span>–û–ø—ã—Ç: {job.experience}</span>
                                  </div>
                                  {job.remote && (
                                    <div className="flex items-center space-x-2">
                                      <Icon name="Wifi" size={20} className="text-green-600" />
                                      <span className="text-green-600">–í–æ–∑–º–æ–∂–Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞</span>
                                    </div>
                                  )}
                                </div>
                                
                                <div className="bg-gradient-to-br from-primary/10 to-accent/10 rounded-lg p-6 text-center">
                                  <div className="text-4xl font-bold text-primary mb-2">{job.match}%</div>
                                  <div className="text-gray-600 mb-4">–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º</div>
                                  <Progress value={job.match} className="mb-4" />
                                  <Button className="w-full">
                                    <Icon name="Send" size={16} className="mr-2" />
                                    –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                                  </Button>
                                </div>
                              </div>
                              
                              <div>
                                <h4 className="text-lg font-semibold mb-3">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
                                <p className="text-gray-700 leading-relaxed">{job.description}</p>
                              </div>
                              
                              <div>
                                <h4 className="text-lg font-semibold mb-3">–ù–∞–≤—ã–∫–∏</h4>
                                <div className="flex flex-wrap gap-2">
                                  {job.skills.map((skill, index) => (
                                    <Badge key={index} variant="secondary" className="px-3 py-1">
                                      {skill}
                                    </Badge>
                                  ))}
                                </div>
                              </div>
                            </TabsContent>
                            
                            <TabsContent value="requirements" className="space-y-4">
                              <div>
                                <h4 className="text-lg font-semibold mb-3">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</h4>
                                <ul className="space-y-2">
                                  {job.requirements?.map((req, index) => (
                                    <li key={index} className="flex items-start space-x-2">
                                      <Icon name="Check" size={16} className="text-green-600 mt-1 flex-shrink-0" />
                                      <span>{req}</span>
                                    </li>
                                  ))}
                                </ul>
                              </div>
                              
                              <div>
                                <h4 className="text-lg font-semibold mb-3">–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏</h4>
                                <ul className="space-y-2">
                                  {job.responsibilities?.map((resp, index) => (
                                    <li key={index} className="flex items-start space-x-2">
                                      <Icon name="ArrowRight" size={16} className="text-primary mt-1 flex-shrink-0" />
                                      <span>{resp}</span>
                                    </li>
                                  ))}
                                </ul>
                              </div>
                            </TabsContent>
                            
                            <TabsContent value="benefits" className="space-y-4">
                              <h4 className="text-lg font-semibold mb-3">–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º</h4>
                              <ul className="space-y-3">
                                {job.benefits?.map((benefit, index) => (
                                  <li key={index} className="flex items-start space-x-3">
                                    <Icon name="Gift" size={16} className="text-accent mt-1 flex-shrink-0" />
                                    <span>{benefit}</span>
                                  </li>
                                ))}
                              </ul>
                            </TabsContent>
                            
                            <TabsContent value="company">
                              <div className="text-center py-8">
                                <div className="text-6xl mb-4">{job.logo}</div>
                                <h3 className="text-2xl font-bold mb-2">{job.company}</h3>
                                <p className="text-gray-600 mb-6">{job.description}</p>
                                <div className="grid grid-cols-3 gap-4 max-w-md mx-auto">
                                  <div className="text-center">
                                    <div className="text-2xl font-bold text-primary">500+</div>
                                    <div className="text-sm text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
                                  </div>
                                  <div className="text-center">
                                    <div className="text-2xl font-bold text-accent">12</div>
                                    <div className="text-sm text-gray-600">–í–∞–∫–∞–Ω—Å–∏–π</div>
                                  </div>
                                  <div className="text-center">
                                    <div className="text-2xl font-bold text-green-600">5‚≠ê</div>
                                    <div className="text-sm text-gray-600">–†–µ–π—Ç–∏–Ω–≥</div>
                                  </div>
                                </div>
                              </div>
                            </TabsContent>
                          </Tabs>
                        </DialogContent>
                      </Dialog>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Companies Section */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <h3 className="text-3xl font-bold text-center text-dark-charcoal mb-12">
            üè¢ –¢–æ–ø–æ–≤—ã–µ IT-–∫–æ–º–ø–∞–Ω–∏–∏
          </h3>
          
          <div className="grid md:grid-cols-3 gap-8">
            {companies.map((company, index) => (
              <Card key={index} className="group hover:shadow-xl transition-all duration-300 hover:-translate-y-2">
                <CardHeader className="text-center">
                  <div className="text-5xl mb-4">{company.logo}</div>
                  <CardTitle className="text-xl group-hover:text-primary transition-colors">
                    {company.name}
                  </CardTitle>
                  <p className="text-gray-600">{company.description}</p>
                </CardHeader>
                <CardContent className="text-center">
                  <div className="grid grid-cols-2 gap-4 mb-4">
                    <div>
                      <div className="text-2xl font-bold text-primary">{company.employees}</div>
                      <div className="text-sm text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
                    </div>
                    <div>
                      <div className="text-2xl font-bold text-creative-orange">{company.openJobs}</div>
                      <div className="text-sm text-gray-600">–í–∞–∫–∞–Ω—Å–∏–π</div>
                    </div>
                  </div>
                  <Button variant="outline" className="w-full group-hover:bg-primary group-hover:text-white transition-colors">
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <h3 className="text-3xl font-bold text-center text-dark-charcoal mb-12">
            ‚ö° –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
          </h3>
          
          <div className="grid md:grid-cols-4 gap-8">
            <div className="text-center group">
              <div className="text-4xl mb-4 group-hover:animate-float">üéØ</div>
              <h4 className="text-xl font-bold mb-2">Smart Matching</h4>
              <p className="text-gray-600">–ò–ò –ø–æ–¥–±–∏—Ä–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤–∞—à–∏–º –Ω–∞–≤—ã–∫–∞–º</p>
            </div>
            <div className="text-center group">
              <div className="text-4xl mb-4 group-hover:animate-float">üí¨</div>
              <h4 className="text-xl font-bold mb-2">–ë—ã—Å—Ç—Ä—ã–π —á–∞—Ç</h4>
              <p className="text-gray-600">–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å —Å HR –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–∞–º–∏</p>
            </div>
            <div className="text-center group">
              <div className="text-4xl mb-4 group-hover:animate-float">üß™</div>
              <h4 className="text-xl font-bold mb-2">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h4>
              <p className="text-gray-600">–ü—Ä–æ—Ö–æ–¥–∏—Ç–µ —Ç–µ—Å—Ç—ã –ø—Ä—è–º–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</p>
            </div>
            <div className="text-center group">
              <div className="text-4xl mb-4 group-hover:animate-float">üìä</div>
              <h4 className="text-xl font-bold mb-2">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h4>
              <p className="text-gray-600">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã</p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-dark-charcoal text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <Icon name="Rocket" size={24} />
                <span className="text-xl font-bold">IT JobSpace</span>
              </div>
              <p className="text-gray-300">
                –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ IT-—Ä–∞–±–æ—Ç—ã
              </p>
            </div>
            <div>
              <h5 className="font-bold mb-4">–í–∞–∫–∞–Ω—Å–∏–∏</h5>
              <ul className="space-y-2 text-gray-300">
                <li><a href="#" className="hover:text-white transition-colors">Frontend</a></li>
                <li><a href="#" className="hover:text-white transition-colors">Backend</a></li>
                <li><a href="#" className="hover:text-white transition-colors">DevOps</a></li>
                <li><a href="#" className="hover:text-white transition-colors">Data Science</a></li>
              </ul>
            </div>
            <div>
              <h5 className="font-bold mb-4">–ö–æ–º–ø–∞–Ω–∏–∏</h5>
              <ul className="space-y-2 text-gray-300">
                <li><a href="#" className="hover:text-white transition-colors">–¢–æ–ø –∫–æ–º–ø–∞–Ω–∏–∏</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–°—Ç–∞—Ä—Ç–∞–ø—ã</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞</a></li>
              </ul>
            </div>
            <div>
              <h5 className="font-bold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h5>
              <ul className="space-y-2 text-gray-300">
                <li><a href="#" className="hover:text-white transition-colors">–ü–æ–º–æ—â—å</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ë–ª–æ–≥</a></li>
              </ul>
            </div>
          </div>
          
          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 IT JobSpace. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>

      {/* Profile Modal */}
      <Dialog open={showProfile} onOpenChange={setShowProfile}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center space-x-3">
              <Avatar className="w-12 h-12">
                <AvatarImage src="/placeholder-user.jpg" />
                <AvatarFallback>–ò–ò</AvatarFallback>
              </Avatar>
              <div>
                <h3 className="text-2xl font-bold">–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</h3>
                <p className="text-primary">Senior Frontend Developer</p>
              </div>
            </DialogTitle>
          </DialogHeader>
          
          <Tabs defaultValue="stats" className="mt-6">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="stats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</TabsTrigger>
              <TabsTrigger value="skills">–ù–∞–≤—ã–∫–∏</TabsTrigger>
              <TabsTrigger value="activity">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</TabsTrigger>
            </TabsList>
            
            <TabsContent value="stats" className="space-y-6">
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <Card className="text-center p-4">
                  <div className="text-2xl font-bold text-primary mb-1">{profileStats.profileViews}</div>
                  <div className="text-sm text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è</div>
                </Card>
                <Card className="text-center p-4">
                  <div className="text-2xl font-bold text-accent mb-1">{profileStats.applicationsSent}</div>
                  <div className="text-sm text-gray-600">–û—Ç–∫–ª–∏–∫–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</div>
                </Card>
                <Card className="text-center p-4">
                  <div className="text-2xl font-bold text-green-600 mb-1">{profileStats.responsesReceived}</div>
                  <div className="text-sm text-gray-600">–û—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ</div>
                </Card>
                <Card className="text-center p-4">
                  <div className="text-2xl font-bold text-blue-600 mb-1">{profileStats.interviewsScheduled}</div>
                  <div className="text-sm text-gray-600">–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–∞–∑–Ω–∞—á–µ–Ω–æ</div>
                </Card>
              </div>
              
              <Card className="p-6">
                <h4 className="text-lg font-semibold mb-4">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞</h4>
                <div className="space-y-4">
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>–û—Ç–∫–ª–∏–∫ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã</span>
                      <span className="font-semibold">{Math.round((profileStats.responsesReceived / profileStats.profileViews) * 100)}%</span>
                    </div>
                    <Progress value={(profileStats.responsesReceived / profileStats.profileViews) * 100} />
                  </div>
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é</span>
                      <span className="font-semibold">{Math.round((profileStats.interviewsScheduled / profileStats.applicationsSent) * 100)}%</span>
                    </div>
                    <Progress value={(profileStats.interviewsScheduled / profileStats.applicationsSent) * 100} />
                  </div>
                </div>
              </Card>
              
              <Card className="p-6">
                <h4 className="text-lg font-semibold mb-4">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –º–µ—Å—è—Ü–∞–º</h4>
                <div className="grid grid-cols-7 gap-1">
                  {Array.from({ length: 84 }, (_, i) => (
                    <div
                      key={i}
                      className={`w-3 h-3 rounded-sm ${
                        Math.random() > 0.7 ? 'bg-primary' :
                        Math.random() > 0.4 ? 'bg-primary/60' :
                        Math.random() > 0.2 ? 'bg-primary/30' : 'bg-gray-200'
                      }`}
                      title={`–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ${i + 1} –¥–µ–Ω—å –Ω–∞–∑–∞–¥`}
                    />
                  ))}
                </div>
                <div className="flex justify-between text-xs text-gray-600 mt-2">
                  <span>3 –º–µ—Å—è—Ü–∞ –Ω–∞–∑–∞–¥</span>
                  <span>–°–µ–≥–æ–¥–Ω—è</span>
                </div>
              </Card>
            </TabsContent>
            
            <TabsContent value="skills" className="space-y-4">
              <Card className="p-6">
                <h4 className="text-lg font-semibold mb-4">–ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤</h4>
                <div className="space-y-4">
                  {Object.entries(profileStats.skillsProgress).map(([skill, progress]) => (
                    <div key={skill}>
                      <div className="flex justify-between text-sm mb-1">
                        <span className="font-medium">{skill}</span>
                        <span className="text-gray-600">{progress}%</span>
                      </div>
                      <Progress value={progress} className="h-2" />
                    </div>
                  ))}
                </div>
              </Card>
              
              <Card className="p-6">
                <h4 className="text-lg font-semibold mb-4">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞–≤—ã–∫–∏</h4>
                <div className="space-y-3">
                  {[
                    { name: 'GraphQL', demand: 85, salary: '+15%' },
                    { name: 'Vue.js', demand: 78, salary: '+10%' },
                    { name: 'Docker', demand: 92, salary: '+20%' }
                  ].map((skill) => (
                    <div key={skill.name} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <div className="font-medium">{skill.name}</div>
                        <div className="text-sm text-gray-600">–í–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: {skill.demand}%</div>
                      </div>
                      <div className="text-right">
                        <div className="text-sm font-medium text-green-600">{skill.salary} –∫ –∑–∞—Ä–ø–ª–∞—Ç–µ</div>
                        <Button size="sm" variant="outline" className="mt-1">–ò–∑—É—á–∏—Ç—å</Button>
                      </div>
                    </div>
                  ))}
                </div>
              </Card>
            </TabsContent>
            
            <TabsContent value="activity" className="space-y-4">
              <div className="space-y-4">
                {[
                  { type: 'application', company: 'TechCorp', position: 'Senior React Developer', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', status: 'pending' },
                  { type: 'view', company: 'CloudTech', position: 'DevOps Engineer', time: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥', status: 'viewed' },
                  { type: 'response', company: 'DataFlow', position: 'Python Developer', time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥', status: 'response' },
                  { type: 'interview', company: 'StartupX', position: 'Full Stack Developer', time: '2 –¥–Ω—è –Ω–∞–∑–∞–¥', status: 'scheduled' }
                ].map((activity, index) => (
                  <Card key={index} className="p-4">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-3">
                        <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                          activity.type === 'application' ? 'bg-blue-100 text-blue-600' :
                          activity.type === 'view' ? 'bg-gray-100 text-gray-600' :
                          activity.type === 'response' ? 'bg-green-100 text-green-600' :
                          'bg-purple-100 text-purple-600'
                        }`}>
                          <Icon name={
                            activity.type === 'application' ? 'Send' :
                            activity.type === 'view' ? 'Eye' :
                            activity.type === 'response' ? 'MessageSquare' :
                            'Calendar'
                          } size={16} />
                        </div>
                        <div>
                          <div className="font-medium">{activity.position}</div>
                          <div className="text-sm text-gray-600">{activity.company}</div>
                        </div>
                      </div>
                      <div className="text-right">
                        <Badge variant={activity.status === 'response' ? 'default' : 'secondary'}>
                          {activity.status === 'pending' ? '–û–∂–∏–¥–∞–Ω–∏–µ' :
                           activity.status === 'viewed' ? '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ' :
                           activity.status === 'response' ? '–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω' : '–ò–Ω—Ç–µ—Ä–≤—å—é'}
                        </Badge>
                        <div className="text-xs text-gray-500 mt-1">{activity.time}</div>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>
            </TabsContent>
          </Tabs>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default Index;